#BlueJ class context
comment0.target=Rounds
comment0.text=\r\n\ Mr.\ Marques\r\n\ \ Rounds\ is\ "abstract"\ because\ you\ can\ NOT\ have\ 'just'\ a\ Rounds.\ It\ has\ to\r\n\ \ be\ of\ a\ certain\ type.\ This\ is\ why\ there\ are\ no\ abstract\ methods\ in\ this\ abstract\r\n\ \ class.\r\n\ \r\n\r\n\ \ \ \r\n\ \ \ \ \ \ \ (1)\ Write\ the\ abstract\ 'Rounds'\ class\ and\ have\ it\ implement\ 'Polygon_Comparable'\r\n\ \ \ \ \ \ \ (2)\ It\ has\ 2\ instance\ variables\ all\ of\ type\ double\:\ myRadius\ and\ myArea.\r\n\ \ \ \ \ \ \ (3)\ It\ has\ 2\ constructors\:\ (a)\ the\ default\ and\ (b)\ that\ takes\ in\ 1\ double\ for\ the\ radius.\r\n\ \ \ \ \ \ \ (4)\ Use\ set-methods\ in\ the\ constructors\ to\ set\ the\ variables\ values.\r\n\ \ \ \ \ \ \ (5)\ Write/implement\ getMyCategory()\ returns\ "Rounds"\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ NOTE\:\ Write/implement\ getMyType()\ in\ EACH\ of\ the\ subclasses\ and\ NOT\ here\!\r\n\ \ \ \ \ \ \ (6)\ Write\ 'compareTo()'\ which\ compares\ 2\ polygons\ via\ their\ area.\r\n
comment1.params=
comment1.target=Rounds()
comment2.params=r
comment2.target=Rounds(double)
comment3.params=
comment3.target=java.lang.String\ getMyCategory()
comment4.params=r
comment4.target=void\ setMyRadius(double)
comment5.params=a
comment5.target=void\ setMyArea(double)
comment6.params=
comment6.target=double\ getMyRadius()
comment7.params=
comment7.target=double\ getMyArea()
comment8.params=
comment8.target=void\ calculateArea()
comment9.params=
comment9.target=java.lang.String\ toString()
numComments=10
